Last test
test 1
def custom_score(game, player):
    return custom_score_moves(game, player) + custom_score_center(game, player)
def custom_score_1(game, player):
    return custom_score_moves(game, player) + 2 *  custom_score_center(game, player)
def custom_score_2(game, player):
    return 2 * custom_score_moves(game, player) +   custom_score_center(game, player)
def custom_score_3(game, player):
     return custom_score_moves(game, player) +    percent_moves(game) *  custom_score_center(game, player)
def custom_score_4(game, player):
     return custom_score_moves(game, player) +   2 * percent_moves(game)*  custom_score_center(game, player)*/
test 2
def custom_score(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    return 2 * custom_score_moves(game, player) + percent_moves(game) * custom_score_center(game, player)
def custom_score_1(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    return 4 * custom_score_moves(game, player) + percent_moves(game) * custom_score_center(game, player)
def custom_score_2(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    return 8 * custom_score_moves(game, player) + percent_moves(game) * custom_score_center(game, player)
def custom_score_3(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    return 8 * custom_score_moves(game, player) +     custom_score_center(game, player)
def custom_score_4(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    return 16 * custom_score_moves(game, player) +      custom_score_center(game, player)
Test 3
def custom_score(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    return custom_score_free_side(game,player)
def custom_score_1(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    return custom_score_free_side(game,player) + custom_score_moves(game, player)
def custom_score_2(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    return custom_score_free_side(game,player) + custom_score_center(game, player)
def custom_score_3(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    return  custom_score_moves(game, player) +  custom_score_center(game, player) +custom_score_free_side(game,p
layer)
def custom_score_4(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    return   custom_score_moves(game, player) + percent_moves(game) * custom_score_center(game, player) +custom_
score_free_side(game,player)
test 4
def custom_score(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    return custom_score_moves(game, player)
def custom_score_1(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    return custom_score_free_side(game,player) + custom_score_moves(game, player)
def custom_score_2(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    return custom_score_free_side(game,player) + custom_score_center(game, player)
def custom_score_3(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    return 2 *  custom_score_moves(game, player) +  custom_score_center(game, player) +custom_score_free_side(game,player)
def custom_score_4(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    return 4 *  custom_score_moves(game, player) + percent_moves(game) * custom_score_center(game, player) +custom_score_free_side(game,player)
test 5
def custom_score(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    return custom_score_moves(game, player) + percent_moves(game) * custom_score_center(game, player) +custom_score_free_side(game,player)
def custom_score_1(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    return custom_score_moves(game, player) + percent_moves(game) * custom_score_center(game, player) + percent_moves(game) *custom_score_free_side(game,player)
def custom_score_2(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    p=percent_moves(game)
    return custom_score_moves(game, player) + p * custom_score_center(game, player) + (1/p) * custom_score_free_side(game,player)
def custom_score_3(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    p=percent_moves(game)
    return 2 * custom_score_moves(game, player) + p * custom_score_center(game, player) + (1/p) * custom_score_free_side(game,player)
def custom_score_4(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    p=percent_moves(game)
    return 2 * custom_score_moves(game, player) + p * custom_score_center(game, player) + 2 * (1/p) * custom_score_free_side(game,player)


"""



def custom_score(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    p=percent_moves(game)
    return  1.2 * custom_score_moves(game, player) + p * custom_score_center(game, player) + p *custom_score_free_side(game,player)

def custom_score_1(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    p=percent_moves(game)
    return  1.3 * custom_score_moves(game, player) + p * custom_score_center(game, player) + p *custom_score_free_side(game,player)
def custom_score_2(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    p=percent_moves(game)
    return custom_eval_player(game,player,p) - 1/2 * custom_eval_player(game,game.get_opponent(player),p)
def custom_score_3(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    return custom_eval_player(game,player,1) - 2/3 * custom_eval_player(game,game.get_opponent(player),1)
def custom_score_4(game, player):
    if game.is_loser(player):
        return float("-inf")
    if game.is_winner(player):
        return float("inf")
    p=percent_moves(game)
    return custom_eval_player(game,player,p) - 1/5 * custom_eval_player(game,game.get_opponent(player),p)
